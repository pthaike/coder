/**
http://hihocoder.com/contest/hihointerview3/problem/1
时间限制:10000ms
单点时限:1000ms
内存限制:256MB
描述
小Hi最近在教邻居家的小朋友小学奥数，而最近正好讲述到了三阶幻方这个部分，三阶幻方指的是将1~9不重复的填入一个3*3的矩阵当中，使得每一行、每一列和每一条对角线的和都是相同的。

三阶幻方又被称作九宫格，在小学奥数里有一句非常有名的口诀：“二四为肩，六八为足，左三右七，戴九履一，五居其中”，通过这样的一句口诀就能够非常完美的构造出一个九宫格来。

pic1.png

有意思的是，所有的三阶幻方，都可以通过这样一个九宫格进行若干镜像和旋转操作之后得到。现在小Hi准备将一个三阶幻方（不一定是上图中的那个）中的一些数组抹掉，交给邻居家的小朋友来进行还原，并且希望她能够判断出究竟是不是只有一组解。

而你呢，也被小Hi交付了同样的任务，但是不同的是，你需要写一个程序~

输入
输入仅包含单组测试数据。

每组测试数据为一个3*3的矩阵，其中为0的部分表示被小Hi抹去的部分。

对于100%的数据，满足给出的矩阵至少能还原出一组可行的三阶幻方。

输出
如果仅能还原出一组可行的三阶幻方，则将其输出，否则输出“Too Many”（不包含引号）。

样例输入
0 7 2
0 5 0
0 3 0
样例输出
6 7 2
1 5 9
8 3 4

0 0 0
0 5 9
0 3 0
*/

#include <cstdio>

using namespace std;

int a[8][9]={
2,7,6,9,5,1,4,3,8,
2,9,4,7,5,3,6,1,8,
4,3,8,9,5,1,2,7,6,
4,9,2,3,5,7,8,1,6,
6,1,8,7,5,3,2,9,4,
6,7,2,1,5,9,8,3,4,
8,1,6,3,5,7,4,9,2,
8,3,4,1,5,9,6,7,2};

int main(void)
{
    int flag[8] = {0};
    int n;
    for(int i = 0; i < 9; i ++)
    {
        scanf("%d", &n);
        if(n == 0)
            continue;
        for(int j = 0; j < 8; j++)
        {
            if(a[j][i] != n)
                flag[j] = 1;;
        }
    }
    int num=0,ix;
    for(int i = 0; i < 9; i ++)
    {
        if(flag[i] == 0)
        {
            num ++;
            ix = i;
        }
    }
    if(num > 1)
        printf("Too Many");
    else
    {
        for(int i = 0; i < 9; i ++)
        {
            printf("%d", a[ix][i]);
            if((i+1)%3==0)
                printf("\n");
            else
                printf(" ");
        }
    }
    return 0;
}
